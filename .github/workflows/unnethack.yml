name: UnNetHack CI builds

on:
  push:
    branches: [ '*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: configure
      env:
        CFLAGS: '-O2 -Wall -Wextra -fno-common -Werror=format -Werror=return-type -Werror=uninitialized -Werror=implicit-function-declaration -Wno-format-overflow'
        LFLAGS: '-fno-common'
      run: "./configure --with-owner=`id -un` --with-group=`id -gn` --enable-wizmode=`id -un` --enable-dummy-graphics --enable-lisp-graphics --enable-curses-graphics --disable-x11-graphics --enable-tty-graphics"

    - name: info
      run: make debug_info

    - name: make
      run: make all

    - name: install libcheck
      run: sudo apt-get install check

    - name: make check
      run: make check

  macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: configure
      env:
        CFLAGS: '-O2 -Wall -Wextra -fno-common -Werror=format -Werror=return-type -Werror=uninitialized -Werror=implicit-function-declaration'
        LFLAGS: '-fno-common'
      run: "./configure --with-owner=`id -un` --with-group=`id -gn` --enable-wizmode=`id -un` --enable-dummy-graphics --enable-lisp-graphics --enable-curses-graphics --disable-x11-graphics --enable-tty-graphics"

    - name: info
      run: make debug_info

    - name: make
      run: make all

  windows:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup
      run: |
          sudo dpkg --add-architecture i386 && dpkg --print-foreign-architectures && sudo apt-get update
          # https://github.com/actions/runner-images/issues/4589
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update -qq
          sudo apt-get purge -yqq libmono* moby* mono* php* libgdiplus libpcre2-posix3 libzip4

          # wine
          sudo apt-get install gcc-mingw-w64-i686 wine-development wine32 wine-binfmt imagemagick
          sudo update-binfmts --import /usr/share/binfmts/wine

    - name: Build
      run: sys/autoconf/build_win32.sh

    - name: Set environment variables
      run: |
          echo "sha_short=$(echo $GITHUB_SHA | cut -b 1-8)" >> $GITHUB_ENV
          echo "version=$(grep VERSION_STRING include/date.h | cut -f 2 -d \")" >> $GITHUB_ENV
          echo "git_tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Copy generated zip file
      if: startsWith(github.ref, 'refs/tags/')
      run: |
          cp /tmp/unnethack_win32/unnethack-win32-${{ env.version }}.zip unnethack-win32-${{ env.git_tag }}.zip

    - name: Pre-Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: true
        files: unnethack-win32-${{ env.git_tag }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
